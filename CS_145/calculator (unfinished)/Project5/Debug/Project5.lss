
Project5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000658  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000006cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  00800060  00800060  000006cc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006cc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000738  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000de9  00000000  00000000  000007d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000716  00000000  00000000  000015c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000654  00000000  00000000  00001cd7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000194  00000000  00000000  0000232c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a0  00000000  00000000  000024c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006ec  00000000  00000000  00002860  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00002f4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
   8:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
   c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  10:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  14:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  18:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  1c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  20:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  24:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  28:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  2c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  30:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  34:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  38:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  3c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  40:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  44:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  48:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  4c:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  50:	0c 94 4c 00 	jmp	0x98	; 0x98 <__bad_interrupt>
  54:	ce 01       	movw	r24, r28
  56:	d2 01       	movw	r26, r4
  58:	d6 01       	movw	r26, r12
  5a:	be 01       	movw	r22, r28
  5c:	da 01       	movw	r26, r20
  5e:	de 01       	movw	r26, r28
  60:	e2 01       	movw	r28, r4
  62:	c2 01       	movw	r24, r4
  64:	e6 01       	movw	r28, r12
  66:	ea 01       	movw	r28, r20
  68:	ee 01       	movw	r28, r28
  6a:	c6 01       	movw	r24, r12
  6c:	f5 01       	movw	r30, r10
  6e:	f2 01       	movw	r30, r4
  70:	f5 01       	movw	r30, r10
  72:	ca 01       	movw	r24, r20

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf e5       	ldi	r28, 0x5F	; 95
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_clear_bss>:
  80:	20 e0       	ldi	r18, 0x00	; 0
  82:	a0 e6       	ldi	r26, 0x60	; 96
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	01 c0       	rjmp	.+2      	; 0x8a <.do_clear_bss_start>

00000088 <.do_clear_bss_loop>:
  88:	1d 92       	st	X+, r1

0000008a <.do_clear_bss_start>:
  8a:	aa 37       	cpi	r26, 0x7A	; 122
  8c:	b2 07       	cpc	r27, r18
  8e:	e1 f7       	brne	.-8      	; 0x88 <.do_clear_bss_loop>
  90:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <main>
  94:	0c 94 2a 03 	jmp	0x654	; 0x654 <_exit>

00000098 <__bad_interrupt>:
  98:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009c <output>:
int pop() {
	char temp = buf[j];
	j = (j+1) % N;
	sz--;
	return temp;
}
  9c:	66 23       	and	r22, r22
  9e:	11 f0       	breq	.+4      	; 0xa4 <output+0x8>
  a0:	c0 9a       	sbi	0x18, 0	; 24
  a2:	01 c0       	rjmp	.+2      	; 0xa6 <output+0xa>
  a4:	c0 98       	cbi	0x18, 0	; 24
  a6:	c1 98       	cbi	0x18, 1	; 24
  a8:	82 bb       	out	0x12, r24	; 18
  aa:	8f ef       	ldi	r24, 0xFF	; 255
  ac:	81 bb       	out	0x11, r24	; 17
  ae:	c2 9a       	sbi	0x18, 2	; 24
  b0:	00 00       	nop
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	c2 98       	cbi	0x18, 2	; 24
  b8:	08 95       	ret

000000ba <write>:
  ba:	c0 98       	cbi	0x18, 0	; 24
  bc:	c1 9a       	sbi	0x18, 1	; 24
  be:	11 ba       	out	0x11, r1	; 17
  c0:	90 b3       	in	r25, 0x10	; 16
  c2:	c2 9a       	sbi	0x18, 2	; 24
  c4:	00 00       	nop
  c6:	00 00       	nop
  c8:	00 00       	nop
  ca:	11 ba       	out	0x11, r1	; 17
  cc:	90 b3       	in	r25, 0x10	; 16
  ce:	c2 98       	cbi	0x18, 2	; 24
  d0:	99 23       	and	r25, r25
  d2:	9c f3       	brlt	.-26     	; 0xba <write>
  d4:	0e 94 4e 00 	call	0x9c	; 0x9c <output>
  d8:	08 95       	ret

000000da <wait_avr>:
  da:	cf 92       	push	r12
  dc:	df 92       	push	r13
  de:	ef 92       	push	r14
  e0:	ff 92       	push	r15
  e2:	cf 93       	push	r28
  e4:	6b 01       	movw	r12, r22
  e6:	7c 01       	movw	r14, r24
  e8:	83 e0       	ldi	r24, 0x03	; 3
  ea:	83 bf       	out	0x33, r24	; 51
  ec:	20 e0       	ldi	r18, 0x00	; 0
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	a9 01       	movw	r20, r18
  f2:	c7 01       	movw	r24, r14
  f4:	b6 01       	movw	r22, r12
  f6:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__gesf2>
  fa:	18 16       	cp	r1, r24
  fc:	cc f4       	brge	.+50     	; 0x130 <wait_avr+0x56>
  fe:	c3 ef       	ldi	r28, 0xF3	; 243
 100:	c2 bf       	out	0x32, r28	; 50
 102:	88 b7       	in	r24, 0x38	; 56
 104:	81 60       	ori	r24, 0x01	; 1
 106:	88 bf       	out	0x38, r24	; 56
 108:	08 b6       	in	r0, 0x38	; 56
 10a:	00 fe       	sbrs	r0, 0
 10c:	fd cf       	rjmp	.-6      	; 0x108 <wait_avr+0x2e>
 10e:	2d ec       	ldi	r18, 0xCD	; 205
 110:	3c ec       	ldi	r19, 0xCC	; 204
 112:	4c ec       	ldi	r20, 0xCC	; 204
 114:	5d e3       	ldi	r21, 0x3D	; 61
 116:	c7 01       	movw	r24, r14
 118:	b6 01       	movw	r22, r12
 11a:	0e 94 15 02 	call	0x42a	; 0x42a <__subsf3>
 11e:	6b 01       	movw	r12, r22
 120:	7c 01       	movw	r14, r24
 122:	20 e0       	ldi	r18, 0x00	; 0
 124:	30 e0       	ldi	r19, 0x00	; 0
 126:	a9 01       	movw	r20, r18
 128:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <__gesf2>
 12c:	18 16       	cp	r1, r24
 12e:	44 f3       	brlt	.-48     	; 0x100 <wait_avr+0x26>
 130:	13 be       	out	0x33, r1	; 51
 132:	cf 91       	pop	r28
 134:	ff 90       	pop	r15
 136:	ef 90       	pop	r14
 138:	df 90       	pop	r13
 13a:	cf 90       	pop	r12
 13c:	08 95       	ret

0000013e <pressed>:
 13e:	ef 92       	push	r14
 140:	ff 92       	push	r15
 142:	0f 93       	push	r16
 144:	1f 93       	push	r17
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	8c 01       	movw	r16, r24
 14c:	f6 2e       	mov	r15, r22
 14e:	15 ba       	out	0x15, r1	; 21
 150:	60 e0       	ldi	r22, 0x00	; 0
 152:	70 e0       	ldi	r23, 0x00	; 0
 154:	80 e8       	ldi	r24, 0x80	; 128
 156:	9f e3       	ldi	r25, 0x3F	; 63
 158:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
 15c:	14 ba       	out	0x14, r1	; 20
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	80 e8       	ldi	r24, 0x80	; 128
 164:	9f e3       	ldi	r25, 0x3F	; 63
 166:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
 16a:	84 b3       	in	r24, 0x14	; 20
 16c:	c1 e0       	ldi	r28, 0x01	; 1
 16e:	d0 e0       	ldi	r29, 0x00	; 0
 170:	9e 01       	movw	r18, r28
 172:	02 c0       	rjmp	.+4      	; 0x178 <pressed+0x3a>
 174:	22 0f       	add	r18, r18
 176:	33 1f       	adc	r19, r19
 178:	fa 94       	dec	r15
 17a:	e2 f7       	brpl	.-8      	; 0x174 <pressed+0x36>
 17c:	79 01       	movw	r14, r18
 17e:	82 2b       	or	r24, r18
 180:	84 bb       	out	0x14, r24	; 20
 182:	60 e0       	ldi	r22, 0x00	; 0
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	80 e8       	ldi	r24, 0x80	; 128
 188:	9f e3       	ldi	r25, 0x3F	; 63
 18a:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
 18e:	85 b3       	in	r24, 0x15	; 21
 190:	e0 94       	com	r14
 192:	e8 22       	and	r14, r24
 194:	e5 ba       	out	0x15, r14	; 21
 196:	60 e0       	ldi	r22, 0x00	; 0
 198:	70 e0       	ldi	r23, 0x00	; 0
 19a:	80 e8       	ldi	r24, 0x80	; 128
 19c:	9f e3       	ldi	r25, 0x3F	; 63
 19e:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
 1a2:	85 b3       	in	r24, 0x15	; 21
 1a4:	0c 5f       	subi	r16, 0xFC	; 252
 1a6:	1f 4f       	sbci	r17, 0xFF	; 255
 1a8:	00 2e       	mov	r0, r16
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <pressed+0x72>
 1ac:	cc 0f       	add	r28, r28
 1ae:	dd 1f       	adc	r29, r29
 1b0:	0a 94       	dec	r0
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <pressed+0x6e>
 1b4:	c8 2b       	or	r28, r24
 1b6:	c5 bb       	out	0x15, r28	; 21
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	80 e8       	ldi	r24, 0x80	; 128
 1be:	9f e3       	ldi	r25, 0x3F	; 63
 1c0:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
 1c4:	23 b3       	in	r18, 0x13	; 19
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <pressed+0x90>
 1ca:	35 95       	asr	r19
 1cc:	27 95       	ror	r18
 1ce:	0a 95       	dec	r16
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <pressed+0x8c>
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	20 ff       	sbrs	r18, 0
 1d8:	02 c0       	rjmp	.+4      	; 0x1de <pressed+0xa0>
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	1f 91       	pop	r17
 1e4:	0f 91       	pop	r16
 1e6:	ff 90       	pop	r15
 1e8:	ef 90       	pop	r14
 1ea:	08 95       	ret

000001ec <get_key>:
 1ec:	0f 93       	push	r16
 1ee:	1f 93       	push	r17
 1f0:	cf 93       	push	r28
 1f2:	df 93       	push	r29
 1f4:	00 e0       	ldi	r16, 0x00	; 0
 1f6:	10 e0       	ldi	r17, 0x00	; 0
 1f8:	18 c0       	rjmp	.+48     	; 0x22a <get_key+0x3e>
 1fa:	b8 01       	movw	r22, r16
 1fc:	ce 01       	movw	r24, r28
 1fe:	0e 94 9f 00 	call	0x13e	; 0x13e <pressed>
 202:	00 97       	sbiw	r24, 0x00	; 0
 204:	49 f0       	breq	.+18     	; 0x218 <get_key+0x2c>
 206:	c8 01       	movw	r24, r16
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	01 96       	adiw	r24, 0x01	; 1
 212:	8c 0f       	add	r24, r28
 214:	9d 1f       	adc	r25, r29
 216:	0c c0       	rjmp	.+24     	; 0x230 <get_key+0x44>
 218:	21 96       	adiw	r28, 0x01	; 1
 21a:	c4 30       	cpi	r28, 0x04	; 4
 21c:	d1 05       	cpc	r29, r1
 21e:	69 f7       	brne	.-38     	; 0x1fa <get_key+0xe>
 220:	0f 5f       	subi	r16, 0xFF	; 255
 222:	1f 4f       	sbci	r17, 0xFF	; 255
 224:	04 30       	cpi	r16, 0x04	; 4
 226:	11 05       	cpc	r17, r1
 228:	19 f0       	breq	.+6      	; 0x230 <get_key+0x44>
 22a:	c0 e0       	ldi	r28, 0x00	; 0
 22c:	d0 e0       	ldi	r29, 0x00	; 0
 22e:	e5 cf       	rjmp	.-54     	; 0x1fa <get_key+0xe>
 230:	df 91       	pop	r29
 232:	cf 91       	pop	r28
 234:	1f 91       	pop	r17
 236:	0f 91       	pop	r16
 238:	08 95       	ret

0000023a <lcd_init>:
 23a:	b8 9a       	sbi	0x17, 0	; 23
 23c:	b9 9a       	sbi	0x17, 1	; 23
 23e:	ba 9a       	sbi	0x17, 2	; 23
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	70 e0       	ldi	r23, 0x00	; 0
 244:	80 e8       	ldi	r24, 0x80	; 128
 246:	91 e4       	ldi	r25, 0x41	; 65
 248:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
 24c:	60 e0       	ldi	r22, 0x00	; 0
 24e:	80 e3       	ldi	r24, 0x30	; 48
 250:	0e 94 4e 00 	call	0x9c	; 0x9c <output>
 254:	60 e0       	ldi	r22, 0x00	; 0
 256:	70 e0       	ldi	r23, 0x00	; 0
 258:	80 ea       	ldi	r24, 0xA0	; 160
 25a:	90 e4       	ldi	r25, 0x40	; 64
 25c:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	80 e3       	ldi	r24, 0x30	; 48
 264:	0e 94 4e 00 	call	0x9c	; 0x9c <output>
 268:	60 e0       	ldi	r22, 0x00	; 0
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	80 e8       	ldi	r24, 0x80	; 128
 26e:	9f e3       	ldi	r25, 0x3F	; 63
 270:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
 274:	60 e0       	ldi	r22, 0x00	; 0
 276:	8c e3       	ldi	r24, 0x3C	; 60
 278:	0e 94 5d 00 	call	0xba	; 0xba <write>
 27c:	60 e0       	ldi	r22, 0x00	; 0
 27e:	8c e0       	ldi	r24, 0x0C	; 12
 280:	0e 94 5d 00 	call	0xba	; 0xba <write>
 284:	60 e0       	ldi	r22, 0x00	; 0
 286:	86 e0       	ldi	r24, 0x06	; 6
 288:	0e 94 5d 00 	call	0xba	; 0xba <write>
 28c:	60 e0       	ldi	r22, 0x00	; 0
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	0e 94 5d 00 	call	0xba	; 0xba <write>
 294:	08 95       	ret

00000296 <lcd_clr>:
 296:	60 e0       	ldi	r22, 0x00	; 0
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	0e 94 5d 00 	call	0xba	; 0xba <write>
 29e:	08 95       	ret

000002a0 <lcd_pos>:
 2a0:	cf 93       	push	r28
 2a2:	c6 2f       	mov	r28, r22
 2a4:	98 e2       	ldi	r25, 0x28	; 40
 2a6:	89 9f       	mul	r24, r25
 2a8:	c0 0d       	add	r28, r0
 2aa:	11 24       	eor	r1, r1
 2ac:	60 e0       	ldi	r22, 0x00	; 0
 2ae:	82 e0       	ldi	r24, 0x02	; 2
 2b0:	0e 94 5d 00 	call	0xba	; 0xba <write>
 2b4:	cc 23       	and	r28, r28
 2b6:	31 f0       	breq	.+12     	; 0x2c4 <lcd_pos+0x24>
 2b8:	60 e0       	ldi	r22, 0x00	; 0
 2ba:	84 e1       	ldi	r24, 0x14	; 20
 2bc:	0e 94 5d 00 	call	0xba	; 0xba <write>
 2c0:	c1 50       	subi	r28, 0x01	; 1
 2c2:	d1 f7       	brne	.-12     	; 0x2b8 <lcd_pos+0x18>
 2c4:	cf 91       	pop	r28
 2c6:	08 95       	ret

000002c8 <lcd_puts2>:
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	ec 01       	movw	r28, r24
 2ce:	21 96       	adiw	r28, 0x01	; 1
 2d0:	fc 01       	movw	r30, r24
 2d2:	80 81       	ld	r24, Z
 2d4:	88 23       	and	r24, r24
 2d6:	31 f0       	breq	.+12     	; 0x2e4 <lcd_puts2+0x1c>
 2d8:	61 e0       	ldi	r22, 0x01	; 1
 2da:	0e 94 5d 00 	call	0xba	; 0xba <write>
 2de:	89 91       	ld	r24, Y+
 2e0:	81 11       	cpse	r24, r1
 2e2:	fa cf       	rjmp	.-12     	; 0x2d8 <lcd_puts2+0x10>
 2e4:	df 91       	pop	r29
 2e6:	cf 91       	pop	r28
 2e8:	08 95       	ret

000002ea <push>:
 2ea:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <i>
 2ee:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <i+0x1>
 2f2:	f9 01       	movw	r30, r18
 2f4:	ea 59       	subi	r30, 0x9A	; 154
 2f6:	ff 4f       	sbci	r31, 0xFF	; 255
 2f8:	80 83       	st	Z, r24
 2fa:	c9 01       	movw	r24, r18
 2fc:	01 96       	adiw	r24, 0x01	; 1
 2fe:	64 e1       	ldi	r22, 0x14	; 20
 300:	70 e0       	ldi	r23, 0x00	; 0
 302:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__divmodhi4>
 306:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <i+0x1>
 30a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <i>
 30e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <sz>
 312:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <sz+0x1>
 316:	01 96       	adiw	r24, 0x01	; 1
 318:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <sz+0x1>
 31c:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <sz>
 320:	08 95       	ret

00000322 <clear>:

void clear() {
	for (int x = 0; x < sz; ++x)
 322:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <sz>
 326:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <sz+0x1>
 32a:	18 16       	cp	r1, r24
 32c:	19 06       	cpc	r1, r25
 32e:	44 f4       	brge	.+16     	; 0x340 <clear+0x1e>
 330:	e6 e6       	ldi	r30, 0x66	; 102
 332:	f0 e0       	ldi	r31, 0x00	; 0
 334:	8a 59       	subi	r24, 0x9A	; 154
 336:	9f 4f       	sbci	r25, 0xFF	; 255
		buf[x] = 0;
 338:	11 92       	st	Z+, r1
	sz--;
	return temp;
}

void clear() {
	for (int x = 0; x < sz; ++x)
 33a:	e8 17       	cp	r30, r24
 33c:	f9 07       	cpc	r31, r25
 33e:	e1 f7       	brne	.-8      	; 0x338 <clear+0x16>
		buf[x] = 0;
	sz = 0;
 340:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <sz+0x1>
 344:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <sz>
	i = 0;
 348:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <i+0x1>
 34c:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <i>
	j = 0;
 350:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <_edata+0x1>
 354:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <_edata>
 358:	08 95       	ret

0000035a <add_char>:
}

void add_char(int key) {
	if (sz == 16)
 35a:	20 91 64 00 	lds	r18, 0x0064	; 0x800064 <sz>
 35e:	30 91 65 00 	lds	r19, 0x0065	; 0x800065 <sz+0x1>
 362:	20 31       	cpi	r18, 0x10	; 16
 364:	31 05       	cpc	r19, r1
 366:	09 f4       	brne	.+2      	; 0x36a <add_char+0x10>
 368:	40 c0       	rjmp	.+128    	; 0x3ea <add_char+0x90>
		return;
	switch(key) {
 36a:	fc 01       	movw	r30, r24
 36c:	31 97       	sbiw	r30, 0x01	; 1
 36e:	e0 31       	cpi	r30, 0x10	; 16
 370:	f1 05       	cpc	r31, r1
 372:	d8 f5       	brcc	.+118    	; 0x3ea <add_char+0x90>
 374:	e6 5d       	subi	r30, 0xD6	; 214
 376:	ff 4f       	sbci	r31, 0xFF	; 255
 378:	0c 94 10 03 	jmp	0x620	; 0x620 <__tablejump2__>
		case ADD:
			push('+');
 37c:	8b e2       	ldi	r24, 0x2B	; 43
 37e:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 382:	08 95       	ret
		case SUBTRACT:
			push('-');
 384:	8d e2       	ldi	r24, 0x2D	; 45
 386:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 38a:	08 95       	ret
		case MULTIPLY:
			push('*');
 38c:	8a e2       	ldi	r24, 0x2A	; 42
 38e:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 392:	08 95       	ret
		case DIVIDE:
			push('/');
 394:	8f e2       	ldi	r24, 0x2F	; 47
 396:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 39a:	08 95       	ret
		case 1:
			push('1');
 39c:	81 e3       	ldi	r24, 0x31	; 49
 39e:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3a2:	08 95       	ret
		case 2:
			push('2');
 3a4:	82 e3       	ldi	r24, 0x32	; 50
 3a6:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3aa:	08 95       	ret
		case 3:
			push('3');
 3ac:	83 e3       	ldi	r24, 0x33	; 51
 3ae:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3b2:	08 95       	ret
		case 5:
			push('4');
 3b4:	84 e3       	ldi	r24, 0x34	; 52
 3b6:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3ba:	08 95       	ret
		case 6:
			push('5');
 3bc:	85 e3       	ldi	r24, 0x35	; 53
 3be:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3c2:	08 95       	ret
		case 7:
			push('6');
 3c4:	86 e3       	ldi	r24, 0x36	; 54
 3c6:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3ca:	08 95       	ret
		case 9:
			push('7');
 3cc:	87 e3       	ldi	r24, 0x37	; 55
 3ce:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3d2:	08 95       	ret
		case 10:
			push('8');
 3d4:	88 e3       	ldi	r24, 0x38	; 56
 3d6:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3da:	08 95       	ret
		case 11:
			push('9');
 3dc:	89 e3       	ldi	r24, 0x39	; 57
 3de:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
			break;
 3e2:	08 95       	ret
		case 14:
			push('0');
 3e4:	80 e3       	ldi	r24, 0x30	; 48
 3e6:	0e 94 75 01 	call	0x2ea	; 0x2ea <push>
 3ea:	08 95       	ret

000003ec <clear_calc>:
			break;
	}
}

void clear_calc(void) {
	lcd_clr();
 3ec:	0e 94 4b 01 	call	0x296	; 0x296 <lcd_clr>
	clear();
 3f0:	0e 94 91 01 	call	0x322	; 0x322 <clear>
 3f4:	08 95       	ret

000003f6 <main>:
}

int main(void)
{
	lcd_init();
 3f6:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_init>
    while (1) 
    {
		int key = get_key();
 3fa:	0e 94 f6 00 	call	0x1ec	; 0x1ec <get_key>
 3fe:	ec 01       	movw	r28, r24
		add_char(key);
 400:	0e 94 ad 01 	call	0x35a	; 0x35a <add_char>
		lcd_pos(0,0);
 404:	60 e0       	ldi	r22, 0x00	; 0
 406:	80 e0       	ldi	r24, 0x00	; 0
 408:	0e 94 50 01 	call	0x2a0	; 0x2a0 <lcd_pos>
		lcd_puts2(buf);
 40c:	86 e6       	ldi	r24, 0x66	; 102
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0e 94 64 01 	call	0x2c8	; 0x2c8 <lcd_puts2>
		if (key == ENTER) {
			//calculate();
		}
		if (key == CLEAR) {
 414:	2f 97       	sbiw	r28, 0x0f	; 15
 416:	11 f4       	brne	.+4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
			clear_calc();
 418:	0e 94 f6 01 	call	0x3ec	; 0x3ec <clear_calc>
		}
		wait_avr(250);
 41c:	60 e0       	ldi	r22, 0x00	; 0
 41e:	70 e0       	ldi	r23, 0x00	; 0
 420:	8a e7       	ldi	r24, 0x7A	; 122
 422:	93 e4       	ldi	r25, 0x43	; 67
 424:	0e 94 6d 00 	call	0xda	; 0xda <wait_avr>
    }
 428:	e8 cf       	rjmp	.-48     	; 0x3fa <main+0x4>

0000042a <__subsf3>:
 42a:	50 58       	subi	r21, 0x80	; 128

0000042c <__addsf3>:
 42c:	bb 27       	eor	r27, r27
 42e:	aa 27       	eor	r26, r26
 430:	0e 94 2d 02 	call	0x45a	; 0x45a <__addsf3x>
 434:	0c 94 99 02 	jmp	0x532	; 0x532 <__fp_round>
 438:	0e 94 8b 02 	call	0x516	; 0x516 <__fp_pscA>
 43c:	38 f0       	brcs	.+14     	; 0x44c <__addsf3+0x20>
 43e:	0e 94 92 02 	call	0x524	; 0x524 <__fp_pscB>
 442:	20 f0       	brcs	.+8      	; 0x44c <__addsf3+0x20>
 444:	39 f4       	brne	.+14     	; 0x454 <__addsf3+0x28>
 446:	9f 3f       	cpi	r25, 0xFF	; 255
 448:	19 f4       	brne	.+6      	; 0x450 <__addsf3+0x24>
 44a:	26 f4       	brtc	.+8      	; 0x454 <__addsf3+0x28>
 44c:	0c 94 88 02 	jmp	0x510	; 0x510 <__fp_nan>
 450:	0e f4       	brtc	.+2      	; 0x454 <__addsf3+0x28>
 452:	e0 95       	com	r30
 454:	e7 fb       	bst	r30, 7
 456:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_inf>

0000045a <__addsf3x>:
 45a:	e9 2f       	mov	r30, r25
 45c:	0e 94 aa 02 	call	0x554	; 0x554 <__fp_split3>
 460:	58 f3       	brcs	.-42     	; 0x438 <__addsf3+0xc>
 462:	ba 17       	cp	r27, r26
 464:	62 07       	cpc	r22, r18
 466:	73 07       	cpc	r23, r19
 468:	84 07       	cpc	r24, r20
 46a:	95 07       	cpc	r25, r21
 46c:	20 f0       	brcs	.+8      	; 0x476 <__addsf3x+0x1c>
 46e:	79 f4       	brne	.+30     	; 0x48e <__addsf3x+0x34>
 470:	a6 f5       	brtc	.+104    	; 0x4da <__addsf3x+0x80>
 472:	0c 94 cc 02 	jmp	0x598	; 0x598 <__fp_zero>
 476:	0e f4       	brtc	.+2      	; 0x47a <__addsf3x+0x20>
 478:	e0 95       	com	r30
 47a:	0b 2e       	mov	r0, r27
 47c:	ba 2f       	mov	r27, r26
 47e:	a0 2d       	mov	r26, r0
 480:	0b 01       	movw	r0, r22
 482:	b9 01       	movw	r22, r18
 484:	90 01       	movw	r18, r0
 486:	0c 01       	movw	r0, r24
 488:	ca 01       	movw	r24, r20
 48a:	a0 01       	movw	r20, r0
 48c:	11 24       	eor	r1, r1
 48e:	ff 27       	eor	r31, r31
 490:	59 1b       	sub	r21, r25
 492:	99 f0       	breq	.+38     	; 0x4ba <__addsf3x+0x60>
 494:	59 3f       	cpi	r21, 0xF9	; 249
 496:	50 f4       	brcc	.+20     	; 0x4ac <__addsf3x+0x52>
 498:	50 3e       	cpi	r21, 0xE0	; 224
 49a:	68 f1       	brcs	.+90     	; 0x4f6 <__addsf3x+0x9c>
 49c:	1a 16       	cp	r1, r26
 49e:	f0 40       	sbci	r31, 0x00	; 0
 4a0:	a2 2f       	mov	r26, r18
 4a2:	23 2f       	mov	r18, r19
 4a4:	34 2f       	mov	r19, r20
 4a6:	44 27       	eor	r20, r20
 4a8:	58 5f       	subi	r21, 0xF8	; 248
 4aa:	f3 cf       	rjmp	.-26     	; 0x492 <__addsf3x+0x38>
 4ac:	46 95       	lsr	r20
 4ae:	37 95       	ror	r19
 4b0:	27 95       	ror	r18
 4b2:	a7 95       	ror	r26
 4b4:	f0 40       	sbci	r31, 0x00	; 0
 4b6:	53 95       	inc	r21
 4b8:	c9 f7       	brne	.-14     	; 0x4ac <__addsf3x+0x52>
 4ba:	7e f4       	brtc	.+30     	; 0x4da <__addsf3x+0x80>
 4bc:	1f 16       	cp	r1, r31
 4be:	ba 0b       	sbc	r27, r26
 4c0:	62 0b       	sbc	r22, r18
 4c2:	73 0b       	sbc	r23, r19
 4c4:	84 0b       	sbc	r24, r20
 4c6:	ba f0       	brmi	.+46     	; 0x4f6 <__addsf3x+0x9c>
 4c8:	91 50       	subi	r25, 0x01	; 1
 4ca:	a1 f0       	breq	.+40     	; 0x4f4 <__addsf3x+0x9a>
 4cc:	ff 0f       	add	r31, r31
 4ce:	bb 1f       	adc	r27, r27
 4d0:	66 1f       	adc	r22, r22
 4d2:	77 1f       	adc	r23, r23
 4d4:	88 1f       	adc	r24, r24
 4d6:	c2 f7       	brpl	.-16     	; 0x4c8 <__addsf3x+0x6e>
 4d8:	0e c0       	rjmp	.+28     	; 0x4f6 <__addsf3x+0x9c>
 4da:	ba 0f       	add	r27, r26
 4dc:	62 1f       	adc	r22, r18
 4de:	73 1f       	adc	r23, r19
 4e0:	84 1f       	adc	r24, r20
 4e2:	48 f4       	brcc	.+18     	; 0x4f6 <__addsf3x+0x9c>
 4e4:	87 95       	ror	r24
 4e6:	77 95       	ror	r23
 4e8:	67 95       	ror	r22
 4ea:	b7 95       	ror	r27
 4ec:	f7 95       	ror	r31
 4ee:	9e 3f       	cpi	r25, 0xFE	; 254
 4f0:	08 f0       	brcs	.+2      	; 0x4f4 <__addsf3x+0x9a>
 4f2:	b0 cf       	rjmp	.-160    	; 0x454 <__addsf3+0x28>
 4f4:	93 95       	inc	r25
 4f6:	88 0f       	add	r24, r24
 4f8:	08 f0       	brcs	.+2      	; 0x4fc <__addsf3x+0xa2>
 4fa:	99 27       	eor	r25, r25
 4fc:	ee 0f       	add	r30, r30
 4fe:	97 95       	ror	r25
 500:	87 95       	ror	r24
 502:	08 95       	ret

00000504 <__fp_inf>:
 504:	97 f9       	bld	r25, 7
 506:	9f 67       	ori	r25, 0x7F	; 127
 508:	80 e8       	ldi	r24, 0x80	; 128
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	60 e0       	ldi	r22, 0x00	; 0
 50e:	08 95       	ret

00000510 <__fp_nan>:
 510:	9f ef       	ldi	r25, 0xFF	; 255
 512:	80 ec       	ldi	r24, 0xC0	; 192
 514:	08 95       	ret

00000516 <__fp_pscA>:
 516:	00 24       	eor	r0, r0
 518:	0a 94       	dec	r0
 51a:	16 16       	cp	r1, r22
 51c:	17 06       	cpc	r1, r23
 51e:	18 06       	cpc	r1, r24
 520:	09 06       	cpc	r0, r25
 522:	08 95       	ret

00000524 <__fp_pscB>:
 524:	00 24       	eor	r0, r0
 526:	0a 94       	dec	r0
 528:	12 16       	cp	r1, r18
 52a:	13 06       	cpc	r1, r19
 52c:	14 06       	cpc	r1, r20
 52e:	05 06       	cpc	r0, r21
 530:	08 95       	ret

00000532 <__fp_round>:
 532:	09 2e       	mov	r0, r25
 534:	03 94       	inc	r0
 536:	00 0c       	add	r0, r0
 538:	11 f4       	brne	.+4      	; 0x53e <__fp_round+0xc>
 53a:	88 23       	and	r24, r24
 53c:	52 f0       	brmi	.+20     	; 0x552 <__fp_round+0x20>
 53e:	bb 0f       	add	r27, r27
 540:	40 f4       	brcc	.+16     	; 0x552 <__fp_round+0x20>
 542:	bf 2b       	or	r27, r31
 544:	11 f4       	brne	.+4      	; 0x54a <__fp_round+0x18>
 546:	60 ff       	sbrs	r22, 0
 548:	04 c0       	rjmp	.+8      	; 0x552 <__fp_round+0x20>
 54a:	6f 5f       	subi	r22, 0xFF	; 255
 54c:	7f 4f       	sbci	r23, 0xFF	; 255
 54e:	8f 4f       	sbci	r24, 0xFF	; 255
 550:	9f 4f       	sbci	r25, 0xFF	; 255
 552:	08 95       	ret

00000554 <__fp_split3>:
 554:	57 fd       	sbrc	r21, 7
 556:	90 58       	subi	r25, 0x80	; 128
 558:	44 0f       	add	r20, r20
 55a:	55 1f       	adc	r21, r21
 55c:	59 f0       	breq	.+22     	; 0x574 <__fp_splitA+0x10>
 55e:	5f 3f       	cpi	r21, 0xFF	; 255
 560:	71 f0       	breq	.+28     	; 0x57e <__fp_splitA+0x1a>
 562:	47 95       	ror	r20

00000564 <__fp_splitA>:
 564:	88 0f       	add	r24, r24
 566:	97 fb       	bst	r25, 7
 568:	99 1f       	adc	r25, r25
 56a:	61 f0       	breq	.+24     	; 0x584 <__fp_splitA+0x20>
 56c:	9f 3f       	cpi	r25, 0xFF	; 255
 56e:	79 f0       	breq	.+30     	; 0x58e <__fp_splitA+0x2a>
 570:	87 95       	ror	r24
 572:	08 95       	ret
 574:	12 16       	cp	r1, r18
 576:	13 06       	cpc	r1, r19
 578:	14 06       	cpc	r1, r20
 57a:	55 1f       	adc	r21, r21
 57c:	f2 cf       	rjmp	.-28     	; 0x562 <__fp_split3+0xe>
 57e:	46 95       	lsr	r20
 580:	f1 df       	rcall	.-30     	; 0x564 <__fp_splitA>
 582:	08 c0       	rjmp	.+16     	; 0x594 <__fp_splitA+0x30>
 584:	16 16       	cp	r1, r22
 586:	17 06       	cpc	r1, r23
 588:	18 06       	cpc	r1, r24
 58a:	99 1f       	adc	r25, r25
 58c:	f1 cf       	rjmp	.-30     	; 0x570 <__fp_splitA+0xc>
 58e:	86 95       	lsr	r24
 590:	71 05       	cpc	r23, r1
 592:	61 05       	cpc	r22, r1
 594:	08 94       	sec
 596:	08 95       	ret

00000598 <__fp_zero>:
 598:	e8 94       	clt

0000059a <__fp_szero>:
 59a:	bb 27       	eor	r27, r27
 59c:	66 27       	eor	r22, r22
 59e:	77 27       	eor	r23, r23
 5a0:	cb 01       	movw	r24, r22
 5a2:	97 f9       	bld	r25, 7
 5a4:	08 95       	ret

000005a6 <__gesf2>:
 5a6:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fp_cmp>
 5aa:	08 f4       	brcc	.+2      	; 0x5ae <__gesf2+0x8>
 5ac:	8f ef       	ldi	r24, 0xFF	; 255
 5ae:	08 95       	ret

000005b0 <__fp_cmp>:
 5b0:	99 0f       	add	r25, r25
 5b2:	00 08       	sbc	r0, r0
 5b4:	55 0f       	add	r21, r21
 5b6:	aa 0b       	sbc	r26, r26
 5b8:	e0 e8       	ldi	r30, 0x80	; 128
 5ba:	fe ef       	ldi	r31, 0xFE	; 254
 5bc:	16 16       	cp	r1, r22
 5be:	17 06       	cpc	r1, r23
 5c0:	e8 07       	cpc	r30, r24
 5c2:	f9 07       	cpc	r31, r25
 5c4:	c0 f0       	brcs	.+48     	; 0x5f6 <__fp_cmp+0x46>
 5c6:	12 16       	cp	r1, r18
 5c8:	13 06       	cpc	r1, r19
 5ca:	e4 07       	cpc	r30, r20
 5cc:	f5 07       	cpc	r31, r21
 5ce:	98 f0       	brcs	.+38     	; 0x5f6 <__fp_cmp+0x46>
 5d0:	62 1b       	sub	r22, r18
 5d2:	73 0b       	sbc	r23, r19
 5d4:	84 0b       	sbc	r24, r20
 5d6:	95 0b       	sbc	r25, r21
 5d8:	39 f4       	brne	.+14     	; 0x5e8 <__fp_cmp+0x38>
 5da:	0a 26       	eor	r0, r26
 5dc:	61 f0       	breq	.+24     	; 0x5f6 <__fp_cmp+0x46>
 5de:	23 2b       	or	r18, r19
 5e0:	24 2b       	or	r18, r20
 5e2:	25 2b       	or	r18, r21
 5e4:	21 f4       	brne	.+8      	; 0x5ee <__fp_cmp+0x3e>
 5e6:	08 95       	ret
 5e8:	0a 26       	eor	r0, r26
 5ea:	09 f4       	brne	.+2      	; 0x5ee <__fp_cmp+0x3e>
 5ec:	a1 40       	sbci	r26, 0x01	; 1
 5ee:	a6 95       	lsr	r26
 5f0:	8f ef       	ldi	r24, 0xFF	; 255
 5f2:	81 1d       	adc	r24, r1
 5f4:	81 1d       	adc	r24, r1
 5f6:	08 95       	ret

000005f8 <__divmodhi4>:
 5f8:	97 fb       	bst	r25, 7
 5fa:	07 2e       	mov	r0, r23
 5fc:	16 f4       	brtc	.+4      	; 0x602 <__divmodhi4+0xa>
 5fe:	00 94       	com	r0
 600:	07 d0       	rcall	.+14     	; 0x610 <__divmodhi4_neg1>
 602:	77 fd       	sbrc	r23, 7
 604:	09 d0       	rcall	.+18     	; 0x618 <__divmodhi4_neg2>
 606:	0e 94 16 03 	call	0x62c	; 0x62c <__udivmodhi4>
 60a:	07 fc       	sbrc	r0, 7
 60c:	05 d0       	rcall	.+10     	; 0x618 <__divmodhi4_neg2>
 60e:	3e f4       	brtc	.+14     	; 0x61e <__divmodhi4_exit>

00000610 <__divmodhi4_neg1>:
 610:	90 95       	com	r25
 612:	81 95       	neg	r24
 614:	9f 4f       	sbci	r25, 0xFF	; 255
 616:	08 95       	ret

00000618 <__divmodhi4_neg2>:
 618:	70 95       	com	r23
 61a:	61 95       	neg	r22
 61c:	7f 4f       	sbci	r23, 0xFF	; 255

0000061e <__divmodhi4_exit>:
 61e:	08 95       	ret

00000620 <__tablejump2__>:
 620:	ee 0f       	add	r30, r30
 622:	ff 1f       	adc	r31, r31
 624:	05 90       	lpm	r0, Z+
 626:	f4 91       	lpm	r31, Z
 628:	e0 2d       	mov	r30, r0
 62a:	09 94       	ijmp

0000062c <__udivmodhi4>:
 62c:	aa 1b       	sub	r26, r26
 62e:	bb 1b       	sub	r27, r27
 630:	51 e1       	ldi	r21, 0x11	; 17
 632:	07 c0       	rjmp	.+14     	; 0x642 <__udivmodhi4_ep>

00000634 <__udivmodhi4_loop>:
 634:	aa 1f       	adc	r26, r26
 636:	bb 1f       	adc	r27, r27
 638:	a6 17       	cp	r26, r22
 63a:	b7 07       	cpc	r27, r23
 63c:	10 f0       	brcs	.+4      	; 0x642 <__udivmodhi4_ep>
 63e:	a6 1b       	sub	r26, r22
 640:	b7 0b       	sbc	r27, r23

00000642 <__udivmodhi4_ep>:
 642:	88 1f       	adc	r24, r24
 644:	99 1f       	adc	r25, r25
 646:	5a 95       	dec	r21
 648:	a9 f7       	brne	.-22     	; 0x634 <__udivmodhi4_loop>
 64a:	80 95       	com	r24
 64c:	90 95       	com	r25
 64e:	bc 01       	movw	r22, r24
 650:	cd 01       	movw	r24, r26
 652:	08 95       	ret

00000654 <_exit>:
 654:	f8 94       	cli

00000656 <__stop_program>:
 656:	ff cf       	rjmp	.-2      	; 0x656 <__stop_program>
